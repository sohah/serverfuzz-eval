plugins {
    id 'java'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.amazonaws:aws-lambda-java-core:${awsLambdaJavaCoreVersion}"
    implementation "com.amazonaws:aws-lambda-java-events:${awsLambdaJavaEventsVersion}"
    implementation platform("com.amazonaws:aws-java-sdk-bom:${awsJavaSdkBomVersion}")
    implementation "com.amazonaws:aws-java-sdk-s3"
    implementation "com.amazonaws:aws-java-sdk-sns"
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-slf4j18-impl:${log4jVersion}"
    runtimeOnly "com.amazonaws:aws-lambda-java-log4j2:${awsLambdaJavaLog4j2Version}"

    testImplementation "org.easymock:easymock:${easyMockVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}

test {
    useJUnitPlatform()
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
    dirMode = 0755
    fileMode = 0755
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

build.dependsOn buildZip
